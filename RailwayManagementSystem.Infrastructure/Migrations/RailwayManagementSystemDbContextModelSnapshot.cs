// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RailwayManagementSystem.Infrastructure.DAL;

#nullable disable

namespace RailwayManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(RailwayManagementSystemDbContext))]
    partial class RailwayManagementSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Carrier", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Carriers", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Percentage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Discounts", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Passengers", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TripId")
                        .IsUnique();

                    b.ToTable("Schedules", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Place")
                        .HasColumnType("integer");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("TrainId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("Seats", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfPlatforms")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Stations", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.StationSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("ArrivalTime")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("DepartureTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("Platform")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StationId");

                    b.ToTable("StationSchedules", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)");

                    b.Property<Guid>("SeatId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TripDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PassengerId");

                    b.HasIndex("SeatId");

                    b.HasIndex("TripId");

                    b.ToTable("Tickets", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Train", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarrierId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SeatsAmount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.ToTable("Trains", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)");

                    b.Property<Guid>("TrainId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("Trips", (string)null);
                });

            modelBuilder.Entity("StationTicket", b =>
                {
                    b.Property<Guid>("StationsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TicketsId")
                        .HasColumnType("uuid");

                    b.HasKey("StationsId", "TicketsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("TicketStation", (string)null);
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Passenger", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Schedule", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Trip", null)
                        .WithOne("Schedule")
                        .HasForeignKey("RailwayManagementSystem.Core.Entities.Schedule", "TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("RailwayManagementSystem.Core.ValueObjects.TripAvailability", "TripAvailability", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("Friday")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Monday")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Saturday")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Sunday")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Thursday")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Tuesday")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Wednesday")
                                .HasColumnType("boolean");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");
                        });

                    b.OwnsOne("RailwayManagementSystem.Core.ValueObjects.ValidDate", "ValidDate", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly>("From")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("To")
                                .HasColumnType("date");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");
                        });

                    b.Navigation("TripAvailability")
                        .IsRequired();

                    b.Navigation("ValidDate")
                        .IsRequired();
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Seat", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Train", null)
                        .WithMany("Seats")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.StationSchedule", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Schedule", null)
                        .WithMany("Stations")
                        .HasForeignKey("ScheduleId");

                    b.HasOne("RailwayManagementSystem.Core.Entities.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Ticket", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Passenger", null)
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailwayManagementSystem.Core.Entities.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailwayManagementSystem.Core.Entities.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seat");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Train", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Carrier", "Carrier")
                        .WithMany("Trains")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Trip", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Train", "Train")
                        .WithMany("Trips")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("StationTicket", b =>
                {
                    b.HasOne("RailwayManagementSystem.Core.Entities.Station", null)
                        .WithMany()
                        .HasForeignKey("StationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailwayManagementSystem.Core.Entities.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Carrier", b =>
                {
                    b.Navigation("Trains");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Schedule", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Train", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("RailwayManagementSystem.Core.Entities.Trip", b =>
                {
                    b.Navigation("Schedule")
                        .IsRequired();

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
